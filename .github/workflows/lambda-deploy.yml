name: Deploy to AWS Lambda

on:
  push:
    tags:
      - '*'

env:
  PYTHON_VERSION: '3.9'
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install mangum pytest pytest-cov

      # - name: Run tests with coverage
      #   run: |
      #     pytest --cov=api-management-service --cov-report=term-missing
      #   env:
      #     CI: true

      - name: Create deployment package
        run: |
          mkdir -p deployment_package
          cp -r api-management-service/* deployment_package/
          cp requirements.txt deployment_package/
          cd deployment_package
          pip install --target . -r requirements.txt --no-cache-dir
          zip -r ../lambda_deployment_package.zip . -x "*.pyc" "tests/*" "__pycache__/*"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Deploy to AWS Lambda
        run: |
          # Get the latest tag
          TAG_NAME=$(git describe --tags --abbrev=0)
          echo "Deploying version: $TAG_NAME"
          
          # Update Lambda function with new code
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://lambda_deployment_package.zip
    
          # Update function configuration with new tag
          aws lambda wait function-updated \ 
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }}
          aws lambda update-function-configuration \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --description "Version: $TAG_NAME" \
            --environment "Variables={DB_USER=${{ secrets.DB_USER }}, DB_PASSWORD=${{ secrets.DB_PASSWORD }}, DB_HOST=${{ secrets.DB_HOST }}, DB_NAME=${{ secrets.DB_NAME }}, DB_PORT=${{ secrets.DB_PORT }}, REDIS_HOST=${{ secrets.REDIS_HOST }}}"

          # Wait for update to complete
          aws lambda wait function-updated \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }}

          echo "Deployment completed successfully"